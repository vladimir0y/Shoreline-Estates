(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[42],{64540:(m,$,c)=>{var E=Object.defineProperty,d=Object.getOwnPropertySymbols,O=Object.prototype.hasOwnProperty,g=Object.prototype.propertyIsEnumerable,y=(t,e,r)=>e in t?E(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,w=(t,e)=>{for(var r in e||(e={}))O.call(e,r)&&y(t,r,e[r]);if(d)for(var r of d(e))g.call(e,r)&&y(t,r,e[r]);return t},L=Object.create,n=Object.defineProperty,b=Object.getOwnPropertyDescriptor,C=Object.getOwnPropertyNames,D=Object.getPrototypeOf,T=Object.prototype.hasOwnProperty,I=(t,e,r)=>e in t?n(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,N=(t,e)=>{for(var r in e)n(t,r,{get:e[r],enumerable:!0})},_=(t,e,r,h)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of C(e))!T.call(t,s)&&s!==r&&n(t,s,{get:()=>e[s],enumerable:!(h=b(e,s))||h.enumerable});return t},S=(t,e,r)=>(r=t!=null?L(D(t)):{},_(e||!t||!t.__esModule?n(r,"default",{value:t,enumerable:!0}):r,t)),M=t=>_(n({},"__esModule",{value:!0}),t),a=(t,e,r)=>(I(t,typeof e!="symbol"?e+"":e,r),r),P={};N(P,{default:()=>i}),m.exports=M(P);var v=S(c(95511)),l=c(25831),p=c(30696);const A="https://player.twitch.tv/js/embed/v1.js",j="Twitch",H="twitch-player-";class i extends v.Component{constructor(){super(...arguments),a(this,"callPlayer",l.callPlayer),a(this,"playerID",this.props.config.playerId||`${H}${(0,l.randomString)()}`),a(this,"mute",()=>{this.callPlayer("setMuted",!0)}),a(this,"unmute",()=>{this.callPlayer("setMuted",!1)})}componentDidMount(){this.props.onMount&&this.props.onMount(this)}load(e,r){const{playsinline:h,onError:s,config:R,controls:x}=this.props,o=p.MATCH_URL_TWITCH_CHANNEL.test(e),u=o?e.match(p.MATCH_URL_TWITCH_CHANNEL)[1]:e.match(p.MATCH_URL_TWITCH_VIDEO)[1];if(r){o?this.player.setChannel(u):this.player.setVideo("v"+u);return}(0,l.getSDK)(A,j).then(f=>{this.player=new f.Player(this.playerID,w({video:o?"":u,channel:o?u:"",height:"100%",width:"100%",playsinline:h,autoplay:this.props.playing,muted:this.props.muted,controls:o?!0:x,time:(0,l.parseStartTime)(e)},R.options));const{READY:U,PLAYING:V,PAUSE:F,ENDED:K,ONLINE:W,OFFLINE:Y,SEEK:G}=f.Player;this.player.addEventListener(U,this.props.onReady),this.player.addEventListener(V,this.props.onPlay),this.player.addEventListener(F,this.props.onPause),this.player.addEventListener(K,this.props.onEnded),this.player.addEventListener(G,this.props.onSeek),this.player.addEventListener(W,this.props.onLoaded),this.player.addEventListener(Y,this.props.onLoaded)},s)}play(){this.callPlayer("play")}pause(){this.callPlayer("pause")}stop(){this.callPlayer("pause")}seekTo(e,r=!0){this.callPlayer("seek",e),r||this.pause()}setVolume(e){this.callPlayer("setVolume",e)}getDuration(){return this.callPlayer("getDuration")}getCurrentTime(){return this.callPlayer("getCurrentTime")}getSecondsLoaded(){return null}render(){const e={width:"100%",height:"100%"};return v.default.createElement("div",{style:e,id:this.playerID})}}a(i,"displayName","Twitch"),a(i,"canPlay",p.canPlay.twitch),a(i,"loopOnEnded",!0)}}]);
